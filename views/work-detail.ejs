<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Work Detail</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="icon" href="images/storage.png" sizes="32x32">
</head>

<body>

  <div class="container mt-5">
    <h2 class="text-center section-title">Request ID: <%= requestId %>
    </h2>


    <!-- แสดง storeId ด้านล่างของ Request ID -->
    <% if (transactions.length > 0) { %>
      <h5>
        Store : <%= String(transactions[0].storeId).padStart(3, '0') %> - <%= transactions[0].storename %>
      </h5>
    <% } %>
    

      
      <div class="container mt-4">
        <div class="row g-3 align-items-end justify-content-end">
      
          <div class="col-md-3 col-sm-6">
            <label for="requesterNameInput" class="form-label fw-bold">ชื่อผู้เบิก</label>
            <input id="requesterNameInput" class="form-control" value="<%= transactions[0].requesterName %>">
          </div>
      
          <div class="col-md-3 col-sm-6">
            <label for="newRequestId" class="form-label fw-bold">เลขที่ใบเบิก</label>
            <input id="newRequestId" class="form-control" value="<%= requestId %>">
          </div>
      
          <div class="col-md-3 col-sm-6">
            <label for="storeIdInput" class="form-label fw-bold">รหัสสาขา</label>
            <input id="storeIdInput" type="text" class="form-control"
            value="<%= String(transactions[0].storeId).padStart(3, '0') %>"
            pattern="\d{3}" maxlength="3"
            oninput="this.value = this.value.replace(/\D/g, '').slice(0, 3)">          
          </div>
          
      
          <!-- ✅ รวม "สถานะใบงาน" กับปุ่ม Update -->
          <div class="col-md-3 col-sm-6">
            <div class="d-flex align-items-end">
              <div class="me-2 flex-grow-1">
                <label for="workStatusSelect" class="form-label fw-bold">สถานะใบงาน</label>
                <select id="workStatusSelect" class="form-select">
                  <option value="Pending">Pending</option>
                  <option value="Finish">Finish</option>
                </select>
              </div>
              <div>
                <button id="updateWorkStatus" class="btn btn-primary mb-1">Update</button>
              </div>
            </div>
          </div>
      
        </div>
      
        <div class="mt-3 text-end text-muted small">
          Created At: <%= transactions[0].createdAtFormatted %><br>
          Last Updated: <%= transactions[0].updatedAtFormatted %>
        </div>
      </div>
      
      
      

      

          <!-- ✅ Modal แจ้งเตือนหาก Request ID ซ้ำ -->
          <div class="modal fade" id="duplicateModal" tabindex="-1" aria-labelledby="duplicateModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
              <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                  <h5 class="modal-title" id="duplicateModalLabel">คำเตือน</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  Request ID นี้มีอยู่แล้วในระบบ<br>คุณต้องการใช้ซ้ำหรือไม่?
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
                  <button id="confirmDuplicateBtn" type="button" class="btn btn-primary">ยืนยันใช้ซ้ำ</button>
                </div>
              </div>
            </div>
          </div>

          <div id="alertMessage" class="alert d-none alert-dismissible fade show mt-3 text-center" role="alert">
            <span id="alertText">ข้อความแจ้งเตือนที่นี่</span>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
          </div>

          <!-- ตารางรายการธุรกรรม -->
          <div class="table-responsive mt-3">
            <table class="table table-bordered">
              <thead class="table-secondary">
                <tr>
                  <th class="text-center align-middle">#</th>
                  <th class="text-center align-middle">SKU</th>
                  <th class="text-center align-middle">Quantity</th>
                  <th class="text-center align-middle">Transaction Type</th>
                  <th class="text-center align-middle">Work Status</th>
                  <th class="text-center align-middle">Created At</th>
                </tr>
              </thead>
              <tbody>
                <% transactions.forEach((transaction, tIndex)=> { %>
                  <% transaction.products.forEach((product, pIndex)=> { %>
                    <tr>
                      <td class="text-center">
                        <%= pIndex===0 ? tIndex + 1 : '' %>
                      </td>
                      <td class="text-center">
                        <%= product.sku %>
                      </td>
                      <td class="text-center">
                        <%= product.quantity %>
                      </td>
                      <td class="text-center">
                        <%= transaction.transactionType %>
                      </td>
                      <td class="text-center">
                        <span class="badge bg-<%= transaction.workStatus === 'Finish' ? 'success' : 'secondary' %>">
                          <%= transaction.workStatus %>
                        </span>
                      </td>
                      <td class="text-center">
                        <%= transaction.createdAtFormatted %>
                      </td>
                    </tr>
                  <% }) %>
                <% }) %>
              </tbody>
            </table>
          </div>
          

          <% let summary={}; transactions.forEach(transaction=> {
            transaction.products.forEach(product => {
            const sku = product.sku;
            const desc = product.description || ''; // ตรวจสอบว่า product.description มีค่าหรือไม่
            const qty = Number(product.quantity);

            // ถ้ายังไม่มี key สำหรับ SKU นี้ใน summary ให้สร้าง key ใหม่
            if (!summary[sku]) {
            summary[sku] = { description: desc, net: 0 };
            }

            // คำนวณยอดรวมตาม transactionType
            if (transaction.transactionType.toLowerCase() === 'in') {
            summary[sku].net += qty;
            } else if (transaction.transactionType.toLowerCase() === 'out') {
            summary[sku].net -= qty;
            }
            });
            });
            %>

            <!-- ตาราง Summary ด้านล่าง -->
            <h3 class="mt-3 text-center">Summary (ยอดใช้อะไหล่จริง)</h3>

            <div class="table-responsive mt-3">
              <table class="table table-bordered mt-3">
                <thead class="table-dark">
                  <tr>
                    <th class="text-center align-middle">#</th>
                    <th class="text-center align-middle">SKU</th>
                    <th class="text-center align-middle">Description</th>
                    <th class="text-center align-middle">Net Quantity</th>
                  </tr>
                </thead>
                <tbody>
                  <% Object.keys(summary).forEach((sku, index)=> { %>
                    <tr>
                      <td class="text-center">
                        <%= index + 1 %>
                      </td>
                      <td class="text-center">
                        <%= sku %>
                      </td>
                      <td class="text-center">
                        <%= summary[sku].description %>
                      </td>
                      <td class="text-center">
                        <%= summary[sku].net %>
                      </td>
                    </tr>
                    <% }) %>
                </tbody>
              </table>
            </div>

          
            <a href="/workorder" class="btn btn-lg btn-secondary mb-3">Back</a>
            
            <script>
              document.addEventListener("DOMContentLoaded", function () {
                const defaultStatus = "<%= transactions[0]?.workStatus || 'Pending' %>";
                document.getElementById("workStatusSelect").value = defaultStatus;
              });
            </script>

            <script>
              const updateBtn = document.getElementById("updateWorkStatus");
              const alertMessage = document.getElementById("alertMessage");
              const alertText = document.getElementById("alertText");
              const confirmDuplicateBtn = document.getElementById("confirmDuplicateBtn");
              let duplicateModal;
            
              async function sendUpdate(force = false) {
                const newStatus = document.getElementById("workStatusSelect").value;
                const newRequestId = document.getElementById("newRequestId").value.trim();
                const requesterName = document.getElementById("requesterNameInput").value.trim();
                const storeId = document.getElementById("storeIdInput").value.trim();
            
                const originalText = updateBtn.innerHTML;
                updateBtn.disabled = true;
                updateBtn.innerHTML = `<span class="spinner-border spinner-border-sm me-1"></span> Updating...`;
            
                try {
                  const encodedRequestId = encodeURIComponent("<%= requestId %>");
                  const response = await fetch(`/workorder/${encodedRequestId}/update-status`, {
                    method: "PUT",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                      workStatus: newStatus,
                      newRequestId: newRequestId,
                      requesterName: requesterName,
                      storeId: storeId,
                      forceUpdate: force
                    }),
                  });
            
                  const result = await response.json();
            
                  // ⚠️ เจอ requestId ซ้ำ => เปิด modal
                  if (result.duplicate && !force) {
                    duplicateModal = new bootstrap.Modal(document.getElementById("duplicateModal"));
                    duplicateModal.show();
                    updateBtn.disabled = false;
                    updateBtn.innerHTML = originalText;
                    return;
                  }
            
                  if (response.ok) {
                    if (result.message === "No transactions found to update.") {
                      alertMessage.className = "alert alert-warning alert-dismissible fade show mt-3";
                      alertText.innerText = result.message;
                      alertMessage.classList.remove("d-none");
                      updateBtn.disabled = false;
                      updateBtn.innerHTML = originalText;
                      return;
                    }
            
                    // ✅ สำเร็จ
                    alertMessage.className = "alert alert-success alert-dismissible fade show mt-3";
                    alertText.innerText = result.message;
                    alertMessage.classList.remove("d-none");
            
                    setTimeout(() => {
                      if (result.newRequestId) {
                        window.location.href = `/workorder/${encodeURIComponent(result.newRequestId)}`;
                      } else {
                        location.reload();
                      }
                    }, 2000);
                  } else {
                    // ❌ Response ไม่สำเร็จ
                    throw new Error(result.message || "Update failed.");
                  }
                } catch (error) {
                  alertMessage.className = "alert alert-danger alert-dismissible fade show mt-3";
                  alertText.innerText = error.message || "An unexpected error occurred.";
                  alertMessage.classList.remove("d-none");
                  updateBtn.disabled = false;
                  updateBtn.innerHTML = originalText;
                }
              }
            
              // ✅ ครั้งแรกที่กด
              updateBtn.addEventListener("click", () => {
                sendUpdate(false);
              });
            
              // ✅ เมื่อยืนยันซ้ำจาก modal
              confirmDuplicateBtn.addEventListener("click", () => {
                if (duplicateModal) duplicateModal.hide();
                sendUpdate(true);
              });
            </script>
            
            
            

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

</body>

</html>